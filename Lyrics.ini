[Rainmeter]
Update=30
AccurateText=1
DynamicWindowSize=0

; ========= Metadata ==========
[Metadata]
Name=Xero's Lyrics
Author=Xero
Information=This skin will search for the WebNowPlaying plugin detected song's lyrics on the MusixMatch website and display them in an auto-scrolling window. To get Spotify working with this, get Spicetify.
Version=1.3:2019.09.09

; ========= Variables ==========
[Variables]
; Feel free to edit any one of these, but be careful: if the font size is too big for the width, the scrolling won't go well. Most of the verses should fit in a single line for it to work as intended.
height=672
width=634
fontSize=16
fontFace=Segoe UI Light
lineHeightMultiplier=1.75

; Better don't touch these ones
show=1
scroll=0

; ========= Measures ==========
[mHide]
Measure=Calc
Formula=(mStatus+#show#)
DynamicVariables=1
IfBelowValue=2
IfBelowAction=[!HideMeterGroup Background][!HideMeterGroup Title]
IfAboveValue=1
IfAboveAction=[!ShowMeterGroup Background][!ShowMeterGroup Title]

[mStatus]
Measure=Plugin
Plugin=WebNowPlaying
PlayerType=Status
DynamicVariables=1

[mTitle]
Measure=Plugin
Plugin=WebNowPlaying
PlayerType=Title
RegExpSubstitute=1
Substitute="(?i)- (\d)+ remaster.*":"", "(?i)- (\d)+ version.*":"", "(?i)- radio edit":"", "(?i)[\(-] *from.*":"", "(?i)original version":"", "(?i)rerecorded":"", "(?i) \(.*\)":"", "(?i) \[.*\]":""
DynamicVariables=1

[mArtist]
Measure=Plugin
Plugin=WebNowPlaying
PlayerType=Artist
DynamicVariables=1

[mSearch]
Measure=String
String=[mArtist] [mTitle]
RegExpSubstitute=1
Substitute="-":" ",   ",":" ",   ":":" ", "/":" "
OnChangeAction=[!CommandMeasure mGetSearch "Reset"][!CommandMeasure mGetSearch "Update"][!SetVariable "scroll" 0]
DynamicVariables=1

[mDuration]
Measure=Plugin
Plugin=WebNowPlaying
PlayerType=Duration
DynamicVariables=1

[mProgress]
Measure=Plugin
Plugin=WebNowPlaying
PlayerType=Progress
DynamicVariables=1

[mGetSearch]
Measure=WebParser
URL=https://www.musixmatch.com/search/[&mSearch]/tracks
RegExp='href=\"\/lyrics\/.*?\">'
Substitute='href="':"https://www.musixmatch.com", '">': ""
FinishAction=[!CommandMeasure mGetLyrics "Update"][!CommandMeasure mLyrics "Update"]
DynamicVariables=1
UpdateRate=10000000

[mGetLyrics]
Measure=WebParser
URL=[&mGetSearch]
RegExp=(?siU).*"lyrics".*"body":"(.*)","Language"
DynamicVariables=1
UpdateRate=10000000

[mLyrics]
Measure=Plugin
Plugin=WebParser
URL=[mGetLyrics]
StringIndex=1
DecodeCharacterReference=1
DynamicVariables=1
Substitute="":"NO LYRICS AVAILABLE", "INSTRUMENTAL" : "NO LYRICS AVAILABLE","\n":"#CRLF#",'\"':'"'
IfMatch=NO LYRICS AVAILABLE
IfMatchAction=[!SetVariable show 0]
IfNotMatchAction=[!SetVariable show 1]
IfMatchMode=1
UpdateRate=10000000

[mCount]
; This measure does some RegExp magic counting the lines. For the love of God, don't ever change this. As far as I know, I got it form here (https://forum.rainmeter.net/viewtopic.php?t=15848#p88810).
Measure=String
String=[mLyrics]
RegExpSubstitute=1
Substitute="[^\n]+":"1","\n":"+","\+\+":"+1+","^\+":"1+","\+$":"+1"
DynamicVariables=1

[mLines]
; This uses the 1+1+1+... expression of mCount to calculate number of lines. It's honestly a godsend. You should add +3 if you include the Artist - Track line (more info on LyricsDisplay below).
Measure=Calc
Formula=[mCount]+0
DynamicVariables=1

[mLyricsHeight]
measure=calc
formula=(([mLines]+2)*#fontSize#*#lineHeightMultiplier#)
dynamicvariables=1

[measurey]
; Where in the y axis should the lyrics be?
measure=calc
formula=(mProgress/100)*[mLyricsHeight]+#scroll#*(#fontSize#*#lineHeightMultiplier#)
dynamicvariables=1

[measureCover]
Measure=Plugin
Plugin=WebNowPlaying
PlayerType=Cover
CoverPath=#@#Cover.png
DefaultPath=#@#Default.png

; ================================= Meters ===================================================

[BackgroundVisible]
; BackgroundVisible is independent from LyricsMask and its lyrics, so you can use any shape/gradient you want or just leave it hidden.
Meter=Shape
Shape=Rectangle 0, 0, #width#, #height# | StrokeWidth 0 | Fill LinearGradient Gradient
Gradient=270 | 0,0,0,0 ; 0.10 | 0,0,0,50 ; 0.30 | 0,0,0,30 ; 0.50 | 0,0,0,0 ; 0.90
Hidden=1
AntiAlias=1
DynamicVariables=1
; Comment/uncomment next line to enable/disable visible dark background (for better readability, for example)
; Group=Background

[CoverMask]
; This is the mask wich contains the cover. Change here the transparency and, if you want to, the gradient.
Meter=Shape
Shape=Rectangle 0, 0, #width#, #height# | StrokeWidth 0 | Fill LinearGradient Gradient
Gradient=270 | 0,0,0,0 ; 0.10 | 0,0,0,30 ; 0.30 | 0,0,0,30 ; 0.70 | 0,0,0,0 ; 0.90
AntiAlias=1
DynamicVariables=1
; Comment/uncomment next line to enable/disable cover visulizer.
Group=Background

[Cover]
; I'm not sure why, but not all covers work everytime. Try on a few songs before changing any of this.
; This meter's appearence depends on the meter above, so there's not much to change on here unless you're customising the skin a lot.
Meter=Image
ImageName=[MeasureCover]
; If your display isn't square-ish, maybe you would prefer putting PreserveAspectRatio at 1.
PreserveAspectRatio=0
X=0
Y=0
W=#width#
H=#height#
Container=CoverMask
OnUpdateAction=[!Redraw]
DynamicVariables=1
AntiAlias=1
Group=Background

[LyricsMask]
; The mask for the lyrics, used to fade them out in a gradient. Edit the gradient if you need to.
Meter=Shape
Shape=Rectangle 0, 0, #width#, #height# | StrokeWidth 0 | Fill LinearGradient Gradient
Gradient=270 | 255,255,255,0 ; 0.0 | 255,255,255,50 ; 0.30 | 255,255,255,255 ; 0.5 | 255,255,255,50 ; 0.70 | 255,255,255,0 ; 1.0
Hidden=1
AntiAlias=1
DynamicVariables=1
MouseActionCursor=0
Group=Background

[LyricsDisplay]
; The meter holding the lyrics
Meter=STRING
MeterStyle=StyleLyrics
DynamicVariables=1
MeasureName=mLyrics
MeasureName2=mTitle
MeasureName3=mArtist
W=([LyricsMask:W])
; Height: Background height plus maximum lyric height.
H=([LyricsMask:H]+[mLyricsHeight])
X=([LyricsMask:W]/2)
Y=([LyricsMask:H]/2-[measurey])
StringAlign=CENTER
ClipString=2

; Comment/uncomment next line to enable/disable mouse wheel scrolling.
MouseScrollDownAction=[!SetVariable scroll (#scroll#+1)]
MouseScrollUpAction=[!SetVariable scroll (#scroll#-1)]
MiddleMouseDownAction=[!SetVariable scroll 0]

Text=%1
; Uncomment next three lines and comment the above line to includ Artist - Track at the start of the scrolling text
; Text=%3 - %2#CRLF##CRLF#%1
; InlineSetting=Weight | 600
; InlinePattern=^(.*)\R

Hidden=0
; This makes LyricsMask the mask it's supposed to be. Can be commented to edit the gradient more easily, as you'll be able to see it.
Container=LyricsMask

[TitleAuthor]
; The meter holding the static Artist - Track indicator on the top. Can be disabled by commenting the last line.
Meter=String
MeterStyle=StyleTitle
MeasureName=mTitle
MeasureName2=mArtist
Padding=10,1,10,3
X=([LyricsMask:W]/2)
Y=0
Hidden=1
; It has a slightly darker rectangle behind for better readability. Disable by commenting this line.
SolidColor=0,0,0,10
StringAlign=Center
Text="%2 - %1"
; If you click the title with the left mouse button, it copies the song artist, title and lyrics to the clipboard. To enable/disable, uncomment/comment next line.
; LeftMouseDownAction=[!SetClip "Title: [mTitle]#CRLF#Artist: [mArtist]#CRLF##CRLF#[mLyrics]"]
MouseActionCursor=0
Group=Title

[StyleLyrics]
; Style of the font used on the lyrics. Can be edited freely, but it's better to change font size and face on the variables.
StringEffect=none
FontFace=#fontFace#
FontSize=#fontSize#
FontColor=255,255,255
AntiAlias=1
DynamicVariables=1
MouseActionCursor=0

[StyleTitle]
; Style of the font of the title line. Can be edited freely, but it's better to change font size and face on the variables.
StringEffect=Border
FontFace=#fontFace#
FontWeight=600
FontSize=#fontSize#
FontColor=255,255,255
AntiAlias=1
DynamicVariables=1
MouseActionCursor=0
